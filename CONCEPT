problem: co node.root vs. article.root ? 

kazdy node aj kontent by mal mat nejake callbacky
  (pripad autogallery)

galerie aj nody by mali byt usporiadane hierarchicky

nod by mal byt typu: galeria, clanok (article), sekcia

vlastne clanok ma contenty: texty a referencie na nody

galeria ma contenty: subory a images (ktore ale maju varianty) 

co sekcia? 

co kopirovanie nodov vs. kopirovanie suborov v ramci galerii? 


tzn kazdy nod ma

 - boolean ci sa v listingu zobrazuje do hlby alebo nie
 - kazda site = najvrchnejsi nod ??
 - subnody ... 


EFX / processing / image variants


aj obrazky v galerii by mali byt poprehadzovatelne, takze poprehadzovatelnost, resp. poradie by mala byt vlastnostou nodu. blog je v podstate jediny specialny pripad ... hm?


nejaky logger, ktory by fungoval tak, ze ked dana akcia ma nieco prepocitat (napr synchro ked vchadzam do galerie), alebo ked sa proste len dlho caka, aby som tam videl nejaky progress co sa deje ...


tie farby (tagy) oznacovanie by bolo super, napr. mohol by som si oznacit ktora stranka je home nejakou farbou abo tagom



kazda entita, by mala mat svoju farbu a ikonku v systeme.


ziadne drops by sa nemali inicializovat zbytocne, tzn. na zaciatku budem mat len drop 'site' a budem pristupovat k site.section_pages, nie rovno k section pages. tym padom budem moct kontrolovat linky na danej stranke.


na dbs urovni zriesit import / export ?


NODE
 - is online/offline
 - is published
 - is descended (vidim jeho synov)
 - has color
 - is star
 - export: No, With content, Without content
 - sortable/tree
 - versioned
 - exportable
 - can be associated with n other nodes
 - ma copy, delete, move, duplicate
 - ma unikatny typ v ramci site id a svojho typu

je to v podstate orientovany graf ... alebo nie? co ine okrem content<->contentconfig vazba?

